---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-viewer
subjects:
- kind: ServiceAccount
  name: k8s-viewer
  namespace: default
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-viewer
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-follow-pn-dpl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-follow-pn
  template:
    metadata:
      labels:
        app: log-follow-pn
    spec:
      serviceAccountName: k8s-viewer
      restartPolicy: Always
      containers:
        - name: log-follow
          image: mcr.microsoft.com/cbl-mariner/busybox:2.0
          command: ["sh", "-c"]
          args:
            - |
              # install kubectl
              wget -O /bin/kubectl https://dl.k8s.io/release/v1.32.2/bin/linux/amd64/kubectl 2>/dev/null
              chmod +x /bin/kubectl

              # Wait until the pod labeled app=log-writer-vn2 reaches the Running state.
              kubectl wait --for=condition=ready pod -l app=log-writer-vn2 --timeout=300s >/dev/null

              # Forward the logs from the vn2 pod to this AKS pod so that Container Insights can record them in the ContainerLogV2 table.
              kubectl logs --tail=1000 --follow -l app=log-writer-vn2

              while true; do
                # If `kubectl logs` times out due to inactivity for an extended period, restart it with less --since time.
                kubectl logs --tail=1000 --since=1s -f -l app=log-writer-vn2
              done
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: pod-logs-reader
#   namespace: default
# rules:
# - apiGroups: [""]
#   resources: ["pods", "pods/log"]
#   verbs: ["get", "watch", "list"]

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: read-pod-logs
#   namespace: default
# subjects:
# - kind: ServiceAccount
#   name: demo7-sa
#   namespace: default
# roleRef:
#   kind: Role
#   name: pod-logs-reader
#   apiGroup: rbac.authorization.k8s.io

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: log-follow-pn-dpl
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: log-follow-pn
#   template:
#     metadata:
#       labels:
#         app: log-follow-pn
#         azure.workload.identity/use: 'true'
#     spec:
#       serviceAccountName: demo7-sa
#       restartPolicy: Always
#       containers:
#         - name: log-follow
#           image: mcr.microsoft.com/cbl-mariner/busybox:2.0
#           # image: mcr.microsoft.com/azure-functions/dotnet:4
#           # image: mcr.microsoft.com/azure-cli:cbl-mariner2.0
#           command: ["sh", "-c"]
#           args:
#             - |
#               # install kubectl
#               wget -O /bin/kubectl https://dl.k8s.io/release/v1.32.2/bin/linux/amd64/kubectl 2>/dev/null
#               chmod +x /bin/kubectl

#               # Wait until the pod labeled app=log-writer-vn2 reaches the Running state.
#               kubectl wait --for=condition=ready pod -l app=log-writer-vn2 --timeout=300s >/dev/null

#               # Forward the logs from the vn2 pod to this AKS pod so that Container Insights can record them in the ContainerLogV2 table.
#               kubectl logs --tail=1000 --follow $(kubectl get pod -l app=log-writer-vn2 -o jsonpath='{.items[0].metadata.name}')
